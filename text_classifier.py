import io
import pandas as pd
import csv
import re
import nltk
#from collections import Counter
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from sklearn.feature_extraction.text import TfidfVectorizer, TfidfTransformer
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.ensemble import RandomForestClassifier
from sklearn.naive_bayes import MultinomialNB 
from sklearn.neighbors import NearestNeighbors
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import classification_report
from nltk.stem import PorterStemmer
from sklearn import metrics 
import time

stop_words = [
"a","able","about","above","abst","accordance","according","accordingly","across","act","actually"
,"added"
,"adj"
,"affected"
,"affecting"
,"affects","after"
,"afterwards"
,"again"
,"against"
,"ah"
,"all"
,"almost"
,"alone"
,"along"
,"already"
,"also"
,"although"
,"always"
,"am"
,"among"
,"amongst"
,"an"
,"and"
,"announce"
,"another"
,"any"
,"anybody"
,"anyhow"
,"anymore"
,"anyone"
,"anything"
,"anyway"
,"anyways"
,"anywhere"
,"apparently"
,"approximately"
,"are"
,"aren"
,"arent"
,"arise"
,"around"
,"as"
,"aside"
,"ask"
,"asking"
,"at"
,"auth"
,"available"
,"away"
,"awfully"
,"b"
,"back"
,"be"
,"became"
,"by"
,"c"
,"ca"
,"came"
,"can"
,"cannot"
,"can't"
,"due"
,"everything"
,"everywhere"
,"ex"
,"except"
,"f"
,"far"
,"few"
,"ff"
,"fifth"
,"first"
,"five"
,"fix"
,"followed"
,"following"
,"follows"
,"for"
,"former"
,"formerly"
,"forth"
,"found"
,"four"
,"from"
,"further"
,"furthermore"
,"g"
,"gave"
,"get"
,"gets"
,"getting"
,"give"
,"given"
,"gives"
,"giving"
,"go"
,"goes"
,"gone"
,"got"
,"gotten"
,"h"
,"had"
,"happens"
,"hardly"
,"has"
,"hasn't"
,"have"
,"haven't"
,"having"
,"he"
,"hed"
,"hence"
,"her"
,"here"
,"hereafter"
,"hereby"
,"herein"
,"heres"
,"hereupon"
,"hers"
,"herself"
,"hes"
,"hi"
,"hid"
,"him"
,"himself"
,"his"
,"hither"
,"home"
,"how"
,"howbeit"
,"however"
,"hundred"
,"i"
,"id"
,"ie"
,"if"
,"i'll"
,"im"
,"immediate"
,"immediately"
,"importance"
,"important"
,"in"
,"inc"
,"indeed"
,"index"
,"information"
,"instead"
,"into"
,"invention"
,"inward"
,"is"
,"isn't"
,"it"
,"itd"
,"it'll"
,"its"
,"itself"
,"i've"
,"j"
,"just"
,"k"
,"keep"	
,"keeps"
,"kept"
,"kg"
,"km"
,"know"
,"known"
,"knows"
,"l"
,"largely"
,"last"
,"lately"
,"later"
,"latter"
,"latterly"
,"least"
,"less"
,"lest"
,"let"
,"lets"
,"like"
,"liked"
,"likely"
,"line"
,"little"
,"'ll"
,"look"
,"looking"
,"looks"
,"ltd"
,"m"
,"made"
,"mainly"
,"make"
,"makes"
,"many"
,"may"
,"maybe"
,"me"
,"mean"
,"means"
,"meantime"
,"meanwhile"
,"merely"
,"mg"
,"might"
,"million"
,"miss"
,"ml"
,"more"
,"moreover"
,"most"
,"mostly"
,"mr"
,"mrs"
,"much"
,"mug"
,"ninety"
,"no"
,"nobody"
,"non"
,"none"
,"nonetheless"
,"noone"
,"nor"
,"normally"
,"nos"
,"not"
,"noted"
,"nothing"
,"now"
,"nowhere"
,"o"
,"obtain"
,"obtained"
,"obviously"
,"of"
,"off"
,"often"
,"oh"
,"ok"
,"okay"
,"old"
,"omitted"
,"on"
,"once"
,"one"
,"ones"
,"only"
,"onto"
,"or"
,"ord"
,"other"
,"others"
,"otherwise"
,"ought"
,"our"
,"ours"
,"ourselves"
,"out"
,"outside"
,"over"
,"overall"
,"owing"
,"own"
,"p"
,"page"
,"pages"
,"part"
,"particular"
,"particularly"
,"past"
,"per"
,"perhaps"
,"placed"
,"please"
,"plus"
,"poorly"
,"possible"
,"possibly"
,"potentially"
,"pp"
,"predominantly"
,"present"
,"previously"
,"primarily"
,"probably"
,"promptly"
,"proud"
,"provides"
,"put"
,"q"
,"que"
,"quickly"
,"quite"
,"qv"
,"r"
,"ran"
,"rather"
,"rd"
,"re"
,"readily"
,"really"
,"recent"
,"recently"
,"ref"
,"refs"
,"regarding"
,"regardless"
,"regards"
,"related"
,"relatively"
,"research"
,"respectively"
,"resulted"
,"resulting"
,"results"
,"right"
,"run"
,"s"
,"said"
,"same"
,"saw"
,"say"
,"saying"
,"says"
,"sec"
,"section"
,"see"
,"seeing"
,"seem"
,"seemed"
,"seeming"
,"seems"
,"seen"
,"self"
,"selves"
,"sent"
,"seven"
,"several"
,"shall"
,"she"
,"shed"
,"she'll"
,"shes"
,"should"
,"shouldn't"
,"show"
,"showed"
,"shown"
,"showns"
,"shows"
,"significant"
,"significantly"
,"similar"
,"similarly"
,"since"
,"six"
,"slightly"
,"so"
,"some"
,"somebody"
,"somehow"
,"someone"
,"somethan"
,"something"
,"sometime"
,"sometimes"
,"somewhat"
,"somewhere"
,"soon"
,"sorry"
,"specifically"
,"specified"
,"specify"
,"specifying"
,"still"
,"stop"
,"strongly"
,"sub"
,"substantially"
,"successfully"
,"such"
,"sufficiently"
,"suggest"
,"sup"
,"sure"	,"t"
,"take"
,"taken"
,"taking"
,"tell"
,"tends"
,"th"
,"than"
,"thank"
,"thanks"
,"thanx"
,"that"
,"that'll"
,"thats"
,"that've"
,"the"
,"their"
,"theirs"
,"them"
,"themselves"
,"then"
,"thence"
,"there"
,"thereafter"
,"thereby"
,"thered"
,"therefore"
,"therein"
,"there'll"
,"thereof"
,"therere"
,"theres"
,"thereto"
,"thereupon"
,"there've"
,"these"
,"they"
,"theyd"
,"they'll"
,"theyre"
,"they've"
,"think"
,"this"
,"those"
,"thou"
,"though"
,"thoughh"
,"thousand"
,"throug"
,"through"
,"throughout"
,"thru"
,"thus"
,"til"
,"tip"
,"to"
,"together"
,"too"
,"took"
,"toward"
,"towards"
,"tried"
,"tries"
,"truly"
,"try"
,"trying"
,"ts"
,"twice"
,"two"
,"u"
,"un"
,"under"
,"unfortunately"
,"unless"
,"unlike"
,"unlikely"
,"until"
,"unto"
,"up"
,"upon"
,"ups"
,"us"
,"use"
,"used"
,"useful"
,"usefully"
,"usefulness"
,"uses"
,"using"
,"usually"
,"v"
,"value"
,"various"
,"'ve"
,"very"
,"via"
,"viz"
,"vol"
,"vols"
,"vs"
,"w"
,"want"
,"wants"
,"was"
,"wasnt"
,"way"
,"we"
,"wed"
,"welcome"
,"we'll"
,"went"
,"were"
,"werent"
,"we've"
,"what"
,"whatever"
,"what'll"
,"whats"
,"when"
,"whence"
,"whenever"
,"where"
,"whereafter"
,"whereas"
,"whereby"
,"wherein"
,"wheres"
,"whereupon"
,"wherever"
,"whether"
,"which"
,"while"
,"whim"
,"whither"
,"who"
,"whod"
,"whoever"
,"whole"
,"who'll"
,"whom"
,"whomever"
,"whos"
,"whose"
,"why"
,"widely"
,"willing"
,"wish"
,"with"
,"within"
,"without"
,"wont","words","world","would","wouldnt","www","x","y","yes","yet"
,"you","youd","you'll","your","youre","yours","yourself","yourselves","you've","z","zero"]


#la lecture des donn√©es  
df1=pd.read_csv('spam.csv')
#les categories 
#category = list(df1['labels'].unique())
#determine data and target 

x = df1['Message']
y = df1['Category']
#Extraction des caracteristiques en utilisant la methode TF-IDF 
X_train,X_test,y_train, y_test =train_test_split(x,y,test_size=0.2)
tf_vec = TfidfVectorizer()
train_features = tf_vec.fit(X_train)
train_features = tf_vec.transform(X_train)
test_features = tf_vec.transform(X_test)

#Training and evaluation of the models : 
# fonction ...

def Train_and_evaluation(model, train_features,y_train,test_features,y_test):
  results ={}
  start = time.time()
  model.fit(train_features,y_train)
  end=time.time()
  results['train_time'] = end-start
  train_predicted = model.predict(train_features)
  test_predicted = model.predict(test_features)
  results['classification_rapport'] = classification_report(y_test,test_predicted)
  return results 



#initialisation des models 
MSV = svm.SVC()
D_TREE = DecisionTreeClassifier()
NAIVE_BAYES = MultinomialNB()
Random_forest = RandomForestClassifier(3)
results ={}

for M in [MSV,D_TREE,NAIVE_BAYES,Random_forest]:
   # M_name= M._class_._name_
    results[M] ={}
    results[M] = Train_and_evaluation(M,train_features,y_train,test_features,y_test)

#ecrire les resultats : 
for res in results : 
    print(res)
    print()
    for i in results[res]: 
        print(i, ':')
        print(results[res][i])
        print()
    print('========================================')
    print()

# end ----- 
# end -----

def DT(message) : 
  train_features = tf_vec.fit(message)
  message=tf_vec.transform(message)  
  predict=D_TREE.predict(message)
  category=predict[0]
  print(category)

str=input('tapez un message : ')
DT(str)
 
 

